name: App

on:
  workflow_call:
    inputs:
      app:
        required: true
        type: string
      gcloud:
        required: false
        type: boolean

jobs:
  run:
    runs-on: ubuntu-latest
    environment: runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.GH_TOKEN }}

      - name: Copy GCloud config
        if: ${{ inputs.gcloud }}
        run: echo $GCLOUD_SECRET | base64 -d > src/${{ inputs.app }}/google_client_credentials.json
        shell: bash
        env:
          GCLOUD_SECRET: ${{ secrets.GCLOUD_SECRET }}

      - name: Evaluate whether to fetch input data
        id: eval
        run: echo "::set-output name=check::$(./scripts/check.sh)"
        env:
          APP: ${{ inputs.app }}

      - name: Fetch input data
        id: fetch
        if: ${{ steps.eval.outputs.check == 'true' }}
        run: echo "::set-output name=check::$(./src/${{ inputs.app }}/scripts/fetch.sh)"
        env:
          PCO_APP_ID: ${{ secrets.PCO_APP_ID }}
          PCO_SECRET: ${{ secrets.PCO_SECRET }}
          PCO_CONNECT_ENDPOINT: ${{ secrets.PCO_CONNECT_ENDPOINT }} # how to abstract?

      - name: Build and run
        if: ${{ steps.eval.outputs.check == 'false' || steps.fetch.outputs.check == 'true' }}
        uses: bcmendoza/pco-gh-actions/.github/actions/run@main
        with:
          app: ${{ inputs.app }}
        env:
          PCO_APP_ID: ${{ secrets.PCO_APP_ID }}
          PCO_SECRET: ${{ secrets.PCO_SECRET }}
          TRELLO_API_KEY: ${{ secrets.TRELLO_API_KEY }}
          TRELLO_API_SECRET: ${{ secrets.TRELLO_API_SECRET }}
          TRELLO_TOKEN: ${{ secrets.TRELLO_TOKEN }}
          TRELLO_TOKEN_SECRET: ${{ secrets.TRELLO_TOKEN_SECRET }}
